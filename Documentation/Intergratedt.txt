Frist, The best of our programmer will write a structure for the program. Then we will sperate the function and feature which we need to write in the program.
 It will be by order of the tree of program. Every team member work top-levels of structure first. Go steps on the top to down. Next, we work on it and test it.
 if there are anything stuck. We will figure it out together. when someone has done their task. We will update it in the Github and notice everyone. 
Then we will look at it and check if there are any bugs in the new code. finally. We get it done and check it together. For both project 3 and 4.
 Our team uses the Top-Down Integration. Obviously project 4 is based on the project 3. The reasons why we chose to use Top-Down Integration.
 it is early to find out how the design flaws. We can know what we can do, if there are something we can not do. We will change it immediately.
 Second reason is that we can code and test logic artifacts before we actually write it. Then, we have the two reasons before, we can avoid major fault. 
If we have the issue, we still have parts to reuse. Forth reason is that we can use less time on it cause we both are busy. And we can check code quick and fast. 
Fina reasons. We know Top-Down integrationâ€™s weakness. but we have confidence to avoid it. our team has many communicate. We both has the phone number , groupme , and discord. 
We can communicate with each other as soon as we can. 